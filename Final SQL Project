-- In this SQL code, I'm querying a database that's holding Sales data in regards to playlists. 


-- #1. Show Customers (their full names, customer ID, and country) who are not in the US. 
SELECT 
FirstName, 
Lastname,
CustomerId,
Country
FROM customers
WHERE Country <> 'USA'
;

-- #2. Show only the Customers from Brazil.
SELECT
*
FROM customers
WHERE Country = 'Brazil'
;

-- #3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT
FirstName AS 'Customer FirstName',
LastName AS 'Customer LastName',
InvoiceId,
InvoiceDate,
BillingCountry
FROM customers
INNER JOIN invoices
ON customers.CustomerId=invoices.CustomerId
WHERE Country = 'Brazil'
;

-- #4. Show the Employees who are Sales Agents.
SELECT
*
FROM employees
WHERE Title = 'Sales Support Agent'
;

-- #5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT Distinct BillingCountry
FROM invoices
;

-- #6. Provide a query that shows the invoices associated with each sales agent. 
SELECT
E.FirstName,
E.LastName,
InvoiceId
FROM invoices I
INNER JOIN customers C
    ON I.CustomerId=C.CustomerId
INNER JOIN employees E
    ON C.SupportRepId=E.EmployeeId
;

-- #7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT
I.Total,
C.FirstName AS 'Customer FirstName',
C.LastName AS 'Customer LastName',
C.Country,
E.FirstName AS 'Agent FirstName',
E.LastName AS 'Agent LastName'
FROM invoices I
INNER JOIN customers C
    ON I.CustomerId=C.CustomerId
INNER JOIN employees E
    ON C.SupportRepId=E.EmployeeId
;

-- #8. How many Invoices were there in 2009?
SELECT
COUNT(InvoiceDate) AS 'Invoices from 2009'
FROM invoices
WHERE InvoiceDate LIKE '%2009%'
;

-- #9. What are the total sales for 2009?
SELECT
SUM(Total) AS 'Revenue from 2009'
FROM invoices
WHERE InvoiceDate LIKE '%2009%'
;

-- #10. Write a query that includes the purchased track name with each invoice line ID.
SELECT 
T.Name, 
I.InvoiceLineId
FROM invoice_items I
JOIN tracks T 
ON I.TrackId = T.TrackId
;

-- #11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT 
artists.Name AS 'Artist Name',
tracks.Name AS 'Track Name',
invoice_items.InvoiceLineId
FROM invoice_items
LEFT JOIN tracks
ON invoice_items.TrackID=tracks.TrackID
INNER JOIN albums
ON albums.AlbumID=tracks.AlbumID
LEFT JOIN artists
ON albums.ArtistID=artists.ArtistID
;

-- #12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT
T.Name AS 'Track Name',
A.Title AS 'Album',
M.Name AS 'Media Type',
G.Name AS 'Genre'
FROM tracks T
JOIN media_types M
    ON T.MediaTypeId=M.MediaTypeId
FULL JOIN genres G
    ON G.GenreId=T.GenreId
JOIN albums A
    ON A.AlbumId=T.AlbumId
;

-- #13. Show the total sales made by each sales agent.
SELECT 
ROUND(SUM(I.Total), 2) as 'Total Sales' ,
E.FirstName, 
E.LastName
FROM Employees E
JOIN Customers C 
    ON C.SupportRepId = E.EmployeeId
JOIN chinook.Invoices I 
    ON I.CustomerId = C.CustomerId
WHERE E.Title = 'Sales Support Agent' 
GROUP BY E.FirstName
;

-- #14. Which sales agent made the most dollars in sales in 2009?
SELECT
ROUND(SUM(I.Total),2) AS 'Most Sales',
E.FirstName AS 'Agent First Name',
E.LastName AS 'Agent Last Name'
FROM invoices I
INNER JOIN customers C
    ON I.CustomerId=C.CustomerId
INNER JOIN employees E
    ON C.SupportRepId=E.EmployeeId
WHERE Title = 'Sales Support Agent'
AND I.InvoiceDate LIKE '2009%'
GROUP BY E.FirstName
ORDER BY (round(sum(I.Total),2)) DESC 
LIMIT 1
;

-- #15. What was the most purchased track of all time?
SELECT
COUNT(T.Name) AS 'Most Purchased Track',
T.Name AS 'Track',
A.Name AS 'Artist'
FROM invoice_items I
JOIN tracks T
    ON I.TrackId=T.TrackId
JOIN albums AL
    ON AL.AlbumId=T.AlbumId
JOIN artists A
    ON A.ArtistId=AL.ArtistId
ORDER BY I.InvoiceId
;

-- #16. What was the most purchased album in 2012?
SELECT
Count(AL.Title) AS 'Purchase Count',
AL.Title AS 'Album Name',
A.Name AS 'Artist'
FROM invoice_items I
JOIN tracks T
    ON I.TrackId=T.TrackId
JOIN albums AL
    ON AL.AlbumId=T.AlbumId
JOIN artists A
    ON A.ArtistId=AL.ArtistId
JOIN invoices 
    ON invoices.InvoiceId=I.InvoiceId
WHERE invoices.InvoiceDate LIKE '2012%'
;

-- # 17. What country purchases the most?
SELECT
COUNT(T.Name) AS 'Purchase Count',
C.Country
FROM invoice_items I
JOIN tracks T
    ON I.TrackId=T.TrackId
JOIN albums AL
    ON AL.AlbumId=T.AlbumId
JOIN artists A
    ON A.ArtistId=AL.ArtistId
JOIN invoices
    ON invoices.InvoiceId=I.InvoiceId
JOIN customers C
    on C.CustomerId=invoices.CustomerId    
ORDER BY invoices.InvoiceDate
;

-- #18. What were sales each year since the start?
SELECT
ROUND(SUM(Total),2) AS 'Total',
CASE 
        WHEN invoiceDate BETWEEN '2009-01-01 00:00:00' AND '2009-12-26 00:00:00' THEN '2009' 
        WHEN invoiceDate BETWEEN '2010-01-08 00:00:00' AND '2010-12-25 00:00:00' THEN '2010'
        WHEN invoiceDate BETWEEN '2011-01-02 00:00:00' AND '2011-12-27 00:00:00' THEN '2011'
        WHEN invoiceDate BETWEEN '2012-01-01 00:00:00' AND '2012-12-30 00:00:00' THEN '2012'
        ELSE '2013'
        END AS Year
FROM invoices
GROUP BY
    CASE
        WHEN invoiceDate BETWEEN '2009-01-01 00:00:00' AND '2009-12-26 00:00:00' THEN '2009' 
        WHEN invoiceDate BETWEEN '2010-01-08 00:00:00' AND '2010-12-25 00:00:00' THEN '2010'
        WHEN invoiceDate BETWEEN '2011-01-02 00:00:00' AND '2011-12-27 00:00:00' THEN '2011'
        WHEN invoiceDate BETWEEN '2012-01-01 00:00:00' AND '2012-12-30 00:00:00' THEN '2012'
        ELSE '2013'
        END 
;

-- #19. Which artist released the longest song? 
SELECT
MAX(T.Milliseconds) AS 'Longest Song ms',
T.Name AS 'Track',
A.Name AS 'Artist',
AL.Title AS 'Album'
FROM tracks T
JOIN albums AL
    ON T.AlbumId=AL.AlbumId
JOIN artists A
    ON A.ArtistId=AL.ArtistId
;

-- #20. Show the Customer Total, Customer name, and Sales Agent name for all invoices in Brazil.
SELECT
ROUND(SUM(I.Total),2) AS 'Total',
C.FirstName AS 'Customer FirstName',
C.LastName AS 'Customer LastName',
E.FirstName AS 'Agent FirstName',
E.LastName AS 'Agent LastName'
FROM invoices I
INNER JOIN customers C
    ON I.CustomerId=C.CustomerId
INNER JOIN employees E
    ON C.SupportRepId=E.EmployeeId
WHERE C.Country = 'Brazil'
GROUP BY C.CustomerId;
